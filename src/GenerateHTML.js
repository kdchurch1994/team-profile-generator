//Function that is used to generate the HTML that will use the information entered into the prompt by the user when asked to add a manager
const manageGenerate = function (manager) {//Materialize is being used to create an icon that will be displayed after the name of the manager is displayed
    return `
    <div class ="col-4">
        <div class="card">
            <div class="header-card">
                <h2>${manager.managerName}</h2>
                <h3>Manager</h3><i class="material-icons">content_paste</i>
            </div>

            <div class="body-card">
                <p class="employee-ID">ID: ${manager.employeeID}</p>
                <p class="employee-email>Email: <a href="mailto:${manager.employeeEmail}">${manager.employeeEmail}</a></p>
                <p class="manager-office>Office Number: ${manager.officeNumber}</p>
            </div>
        </div>
    </div>
    `;
}

//Function that is used to generate the HTML that will use the information entered into the prompt by the user when asked to add a new employee and an intern is selected
const Interngenerate = function (intern) {//Materialize is being used to create an icon that will be displayed after the name of the intern is displayed
    return `
    div class="col-4"
        <div class="card">
            <div class="header-card">
                <h2>${intern.employeeName}</h2>
                <h3>Intern</h3><i class="material-icons">assignment_ind</i>
            </div>

            <div class="body-card">
                <p class="employee-ID">ID: ${intern.employeeID}</p>
                <p class="employee-email">Email: <a href="mailto:${intern.employeeEmail}">${intern.employeeEmail}</a></p>
                <p class="intern-school">School: ${intern.internSchool}</p>
            </div>
        </div>
    </div>    
    `;
}

//Function that is used to generate the HTML that will use the information entered into the prompt by the user when asked to add a new employee and an engineer is selcted
const Engineergenerate = function (engineer) {//Materialize is being used to create an icon that will be displayed after the name of the engineer is displayed
    return `
    <div class="col-4">
        div class="card">
            <div class="header-card">
                </h2>${engineer.employeeName}</h2>
                <h3>Engineer</h3><i class="material-icons">laptop_mac</i>
            </div>

            <div class="body-card">
                <p class="employee-ID">ID: ${engineer.employeeID}</p>
                <p class="employee-email">Email: <a href="mailto:${engineer.employeeEmail}">${engineer.employeeEmail}</a></p>
                <p class="engineer-github">GitHub Username: <a href="https://github.com/${engineer.engineerGithub}</a></p>
            </div>
        </div>
    <div>    
    `;
}

//This function is being used to create an array that will be used to generate the webpage. This function will ultimately generate the cards for each employee to be added to the web page
generateHTML = (pageData) => {

    teamPage = [];
    //This for loop is cycling through each employee that was added and is setting the const employee to equal each employee in the array's index
    for (let i = 0; i < pageData.length; i++) {
        const employee = pageData[i];
        const employeeRole = employee.getRole(); //The const employeeRole is being set to equal employee.getRole in order to get the role of each employee. The role of the employee will be important in determinng which card to use for which employee
        //The following if statement is checking the employee role and creating the card that matches that employee's role. 
        if (employeeRole === "Manager") {
            const cardManager = Managergenerate(employee);

            teamPage.push(cardManager); //This is pushing the cardManger to the teamPage array
        } else if (employeeRole === "Intern") {
            const cardIntern = Interngenerate(employee);

            teamPage.push(cardIntern); //This is pushing the cardInternto the teamPage array
        } else if (employeeRole === "Engineer") {
            const cardEngineer = Engineergenerate(employee);

            teamPage.push(cardEngineer);//This is pushing the cardEngineer to the teamPage array
        }
        
    }
    //The const cardsEmployee is being set to equal teamPage.join, which will join the strings in the array and allow us to display each employee card to the web page
    const cardsEmployee = teamPage.join('');

    const teamGenerate = teamGeneratePage(cardsEmployee); //The const temGenerate has been set to the function teamGeneratePage, which will be the function that is used to generate the html page. cardsEmployee is being passed through the function, as the various employee cards will be generated by this.
    return teamGenerate;
}